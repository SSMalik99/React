https://scrimba.com/learn/learnreact/handling-events-in-react-c2Nm2cV


assets:-
https://reactjs.org/docs/events.html#composition-events

// https://engineering.musefind.com/react-lifecycle-methods-how-and-when-to-use-them-2111a1b692b1

// https://reactjs.org/blog/2018/03/29/react-v-16-3.html#component-lifecycle-changes





lifecyle method

 


#$NOt important    
    componentWillReceiveProps(nextProps) {
        if (nextProps.whatever !== this.props.whatever) {
            // do something important here
        }
    }
  
*Not important  
    shouldComponentUpdate(nextProps, nextState) {
        // return true if want it to update
        // return false if not
    }
    
*Not important    
componentWillUnmount() {
        // teardown or cleanup your code before your component disappears
        // (E.g. remove event listeners)
    }
    



:->>>>>>>>////////////>>>>>><<<<<<<<>>>>>>>><><><><><><
IMPORTANT   
componentDidMount() {
        // GET the data I need to correctly display
    }    
render() {}




>>>>>>>>>><<<<<<<<<<<<
Hooks
// https://scrimba.com/g/greacthooks




>>>>>>>>><<<<<<<<<<<<<<
some api for practice

learn these first

// https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch

// https://swapi.co/

https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261


///////////////<<<<<<<<<<<>>>>>>>>>>>
presentational component architecture

https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0

<<<<<<<<>>>>>>>>>><<<<<<<<>>>>>>>>>
url for memegenerator

"https://api.imgflip.com/get_memes"


>>>>>>>>><<<<<<<<<<<
what is preventDefault

<<<<<<<?????????>>>>>>>>>//////////........

/**
 * Other modern/advanced React features/topics to learn:
 * 
 * Official React Context API - https://reactjs.org/docs/context.html
 * Error Boundaries - https://reactjs.org/docs/error-boundaries.html
 * render props - https://reactjs.org/docs/render-props.html
 * Higher Order Components - https://reactjs.org/docs/higher-order-components.html
 * React Router - https://reacttraining.com/react-router/core/guides/philosophy
 * React Hooks - https://reactjs.org/docs/hooks-intro.html
 * React lazy, memo, and Suspense - https://reactjs.org/blog/2018/10/23/react-v-16-6.html
 */


